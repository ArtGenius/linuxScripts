#!/usr/bin/python
import os, sys
import stat
import shutil

def rememberUsersAndGroups():
	shutil.copyfile('/etc/passwd', './passwd')
	shutil.copyfile('/etc/group', './group')

def removeRhostsFiles():
	for dirName in next(os.walk('/home'))[1]:
		rhostsFilePath = '/home/%s/.rhosts' % dirName
		if os.path.exists(rhostsFilePath):
			os.remove(rhostsFilePath)
			print(rhostsFilePath + ' removed')
def changeHomeDirPermissions():
	for dirName in next(os.walk('/home'))[1]:
		if bool(os.stat('/home/' + dirName).st_mode & stat.S_IWOTH):
			os.chmod('/home/' + dirName, os.stat('/home/' + dirName).st_mode & ~stat.S_IWOTH)
			print('permissions for directory /home/' + dirName + ' were modified')

def listOldUserNames():
	fo = open('./passwd', 'r')
	usersList = fo.read().split('\n')
	fo.close()
	return list(map((lambda x:x.split(':')[0]),usersList))
def checkForNewUsers():
	fo = open('/etc/passwd', 'r')
	currentUsersList = fo.read().split('\n')
	fo.close()
	oldUsersList = listOldUserNames()
	newUserNames = list(filter((lambda x:x.split(':')[0] not in oldUsersList), currentUsersList))
	print('new users list:')
	for newUser in newUserNames:
		print(newUser)
def listOldGroupsNames():
	fo = open('./group', 'r')
	groupsList = fo.read().split('\n')
	fo.close()
	return list(map((lambda x:x.split(':')[0]),groupsList))		
def checkForNewGroups():
	fo = open('/etc/group', 'r')
	currentGroupsList = fo.read().split('\n')
	fo.close()
	oldGroupsList = listOldGroupsNames()
	newUserNames = list(filter((lambda x:x.split(':')[0] not in oldGroupsList), currentGroupsList))
	print('new groups list:')
	for newGroup in newUserNames:
		print(newGroup)		
if not os.path.exists('./passwd') or not os.path.exists('./group'):
	rememberUsersAndGroups()
removeRhostsFiles()
changeHomeDirPermissions()
checkForNewUsers()
checkForNewGroups()